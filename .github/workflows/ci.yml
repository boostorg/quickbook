name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - feature/**
      - modular

env:
  UBSAN_OPTIONS: print_stacktrace=1

jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: gcc-4.8
            container: ubuntu:18.04
            os: ubuntu-latest
            install: g++-4.8
          - toolset: gcc-5
            container: ubuntu:18.04
            os: ubuntu-latest
            install: g++-5
          - toolset: gcc-6
            container: ubuntu:18.04
            os: ubuntu-latest
            install: g++-6
          - toolset: gcc-7
            os: ubuntu-20.04
            install: g++-7
# gcc-8 variant=release crashes
#          - toolset: gcc-8
#            os: ubuntu-20.04
#            install: g++-8
          - toolset: gcc-9
            os: ubuntu-20.04
          - toolset: gcc-10
            os: ubuntu-20.04
            install: g++-10
          - toolset: gcc-11
            os: ubuntu-22.04
            install: g++-11
          - toolset: gcc-12
            os: ubuntu-22.04
            install: g++-12
          - toolset: gcc-13
            container: ubuntu:23.04
            os: ubuntu-latest
            install: g++-13
          - toolset: gcc-14
            container: ubuntu:24.04
            os: ubuntu-latest
            install: g++-14
          - toolset: clang
            compiler: clang++-3.9
            container: ubuntu:18.04
            os: ubuntu-latest
            install: clang-3.9
          - toolset: clang
            compiler: clang++-4.0
            container: ubuntu:18.04
            os: ubuntu-latest
            install: clang-4.0
          - toolset: clang
            compiler: clang++-5.0
            container: ubuntu:18.04
            os: ubuntu-latest
            install: clang-5.0
          - toolset: clang
            compiler: clang++-6.0
            os: ubuntu-20.04
            install: clang-6.0
          - toolset: clang
            compiler: clang++-7
            os: ubuntu-20.04
            install: clang-7
          - toolset: clang
            compiler: clang++-8
            os: ubuntu-20.04
            install: clang-8
          - toolset: clang
            compiler: clang++-9
            os: ubuntu-20.04
            install: clang-9
          - toolset: clang
            compiler: clang++-10
            os: ubuntu-20.04
            install: clang-10
          - toolset: clang
            compiler: clang++-11
            os: ubuntu-20.04
            install: clang-11
          - toolset: clang
            compiler: clang++-12
            os: ubuntu-20.04
            install: clang-12
          - toolset: clang
            compiler: clang++-13
            os: ubuntu-22.04
            install: clang-13
          - toolset: clang
            compiler: clang++-14
            os: ubuntu-22.04
            install: clang-14
          - toolset: clang
            compiler: clang++-15
            os: ubuntu-22.04
            install: clang-15
          - toolset: clang
            compiler: clang++-16
            container: ubuntu:23.04
            os: ubuntu-latest
            install: clang-16
          - toolset: clang
            compiler: clang++-17
            container: ubuntu:23.10
            os: ubuntu-latest
            install: clang-17
          - toolset: clang
            compiler: clang++-18
            container: ubuntu:24.04
            os: ubuntu-latest
            install: clang-18
          - toolset: clang
            os: macos-12
          - toolset: clang
            os: macos-13
          - toolset: clang
            os: macos-14

    runs-on: ${{matrix.os}}
    container: ${{matrix.container}}

    defaults:
      run:
        shell: bash


    steps:
      - uses: actions/checkout@v3

      - name: Setup container environment
        if: matrix.container
        run: |
          apt-get update
          apt-get -y install sudo python3 git g++

      - name: Install packages
        if: matrix.install
        run: |
          sudo apt-get update
          sudo apt-get -y install ${{matrix.install}}

      - name: Setup Boost
        run: |
          echo GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          BOOST_BRANCH=develop && ( test "${GITHUB_REF_NAME}" == "master" || test "${GITHUB_REF_NAME}" == "modular" ) && BOOST_BRANCH=${GITHUB_REF_NAME} || true
          BOOST_GIT=https://github.com/${GITHUB_REPOSITORY/quickbook/boost}.git
          echo BOOST_GIT: ${BOOST_GIT}
          echo BOOST_BRANCH: $BOOST_BRANCH
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 "${BOOST_GIT}" boost-root
          cd boost-root
          git submodule update --init
          rm -rf tools/quickbook/*
          cp -r $GITHUB_WORKSPACE/* tools/quickbook
          ./bootstrap.sh
          ./b2 -d0 headers

      - name: Create user-config.jam
        if: matrix.compiler
        run: |
          echo "using ${{matrix.toolset}} : : ${{matrix.compiler}} ;" > ~/user-config.jam

      - name: Run tests
        run: |
          cd ../boost-root
          ./b2 tools/quickbook//all toolset=${{matrix.toolset}} variant=debug,release

  windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: msvc-14.0
            os: windows-2019
          - toolset: msvc-14.2
            os: windows-2019
          - toolset: msvc-14.3
            os: windows-2022

# The test Jamfile doesn't work with the clang-win toolset for some reason
#         - toolset: clang-win
#           os: windows-2022

# gcc-8 variant=release crashes
#         - toolset: gcc
#           os: windows-2019

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Boost
        shell: cmd
        run: |
          echo GITHUB_REPOSITORY: %GITHUB_REPOSITORY%
          set BOOST_BRANCH=develop
          if "%GITHUB_REF_NAME%" == "master" set BOOST_BRANCH=master
          if "%GITHUB_REF_NAME%" == "modular" set BOOST_BRANCH=modular
          set BOOST_GIT=https://github.com/%GITHUB_REPOSITORY:quickbook=boost%.git
          echo BOOST_GIT: %BOOST_GIT%
          echo BOOST_BRANCH: %BOOST_BRANCH%
          cd ..
          git clone -b %BOOST_BRANCH% --depth 1 %BOOST_GIT% boost-root
          cd boost-root
          git submodule update --init
          rd /s/q tools\quickbook
          xcopy /s /e /q %GITHUB_WORKSPACE% tools\quickbook\
          cmd /c bootstrap
          b2 -d0 headers

      - name: Run tests
        shell: cmd
        run: |
          cd ../boost-root
          b2 tools/quickbook//all toolset=${{matrix.toolset}} variant=debug,release embed-manifest-via=linker
